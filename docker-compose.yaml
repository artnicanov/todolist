version: '3.8'

services:
  db:
    image: postgres:15.1-alpine
    volumes:
      - pg_diploma_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      timeout: 3s
      retries: 10
      interval: 3s

  api:
    build: .
    env_file: .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./core:/opt/core
      - ./todolist:/opt/todolist
      - ./bot:/opt/bot
      - django_static:/opt/static

  frontend:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static

  bot:
    build: .
    env_file: .env
    environment:
      POSTGRES_HOST: db
      API_HOST: api
      FRONTEND_HOST: frontend
    depends_on:
      frontend:
        condition: service_started
    volumes:
      - ./bot:/opt/bot
    command: python manage.py runbot

volumes:
  pg_diploma_data:
  django_static:
